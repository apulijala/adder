pipeline {
    agent{
        label "docker"
    }
    stages {
        stage("Running some command") {
            steps {
                echo "========executing A========"
                script {

                    def answer = input message : "Is this Input Message ? ",
                            parameters : [
                                booleanParam(defaultValue : true, 
                                    description : "Prerelease setting", name : "prerelease"
                                ), 

                                choice(choices : "choice1\nchoice2\nchoice3\nchoice4", 
                                    description : "Choose an option", name : "Options"
                                )
                            ]
                    echo "Answer is ${answer}"
                    echo "Option is ${answer['Options']}"
                    echo "Perrelease is ${answer['prerelease']}"

                    def creds = input message: '<message>', 
                        parameters: [[$class: 'CredentialsParameterDefinition', credentialType: 
                        'com.cloudbees.jenkins.plugins.sshcredentials.impl.BasicSSHUserPrivateKey',
                        defaultValue: 'jenkins2-ssh', description: 'SSH key for access',
                        name: 'SSH', required: true]]
                        echo creds

                    def selectedFile = input message: 'File upload', 
                        parameters: [
                            file(description : "Choose file to upload ", 
                                name : "local"
                            )
                        ]
                    echo "${selectedFile}"


                    /*
                    def credUserNamePassword = input message: '',  parameters: [[$class:
                        'CredentialsParameterDefinition', credentialType:
                        'com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl',
                        defaultValue: '', description: 'Enter username and password',
                        name: 'User And Pass', required: true]]

                    echo $credUserNamePassword
                    */

                }
                
            }
        } 
        stage('run-parallel-branches') {
            agent {
                label "docker"
            }
            steps {
                
                parallel(
                    a: {
                        echo "Parallel Branch A"
                    },

                    b: {
                        echo "Parllel Branch B and B"
                    }
                )
            }
        }
    }
}