pipeline {
    agent{
        label "docker"
    }

    parameters {
        string( name : "hostname", defaultValue: "demo-dev", description : "Hostname"   )
        booleanParam(name :"yesno", defaultValue: false, description : "Checkbox" )
        choice(name : "planet", choices : ["Mercury", "Venus", "Mars", "Jupiter"]  )
        text(name : "story", defaultValue :"Default value of the story", 
                description : "Default value of the Story")
        password(name : "secret", 
                defaultValue :"password", 
                description: "Enter the password")
        file(description : "Choose file to upload ", name : "myfile")
    }

    stages {
        stage("Running some command") {
            steps {

                script {
                    // https://code-maven.com/jenkins-pipeline-parameters
                    if (hostname == "demo-dev") {
                        println ("Hostname is ${params.hostname}")
                    }else {
                        println("Hostname is something else : ${hostname}")
                    }

                    // go by the name. 
                    println("Password is ${secret}")
                    println("Text value is ${story}")
                    println("Boolean value is ${yesno}")
                    println("Choice is ${planet}")

                    def lines = input message : "lines", 
                    parameters : [
                        text(defaultValue : """
                            Line 1 and First Line. 
                            Line 2 and Second Line. 
                            Third Line
                            """, 
                            description :" All the Lines",
                            name :"inputlines"
                        )
                    ]
                    println("Lines are " + lines)
                    def loginInformation = input message : "Login", 
                                    parameters : [
                                        string(defaultValue : "Login", name : "userid", 
                                         description : "Enter userid"), 
                                        password(defaultValue : "passwd", 
                                            description: "Enter Password", 
                                            name : "passwd"
                                        )

                                    ]
                  println("Username = " + loginInformation["userid"])
                  println("Password =  +  ${loginInformation['passwd']}")
                  println(" Using dot operator " + loginInformation.passwd)

                }   

                script {
                        println("Env script")
                        env.RESP1 = input message :"Environment setup " , parameters : [
                            string(defaultValue : "" , 
                                    description : "Enter response 1 ", 
                                    name : "RESPONSE1"
                                )
                        ]
                        def credentials = input message: "select ssh credentials", 
                            parameters : [
                                [
                                    $class : "CredentialsParameterDefinition", 
                                    credentialType: 'com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl', 
                                    defaultValue : " " , 
                                    description : "Enter username and Password", 
                                    name :"user_and_pass", required: true
                                ]
                            ]
                            
                   
                }

                script { 
                    println("Response is ${env.RESP1}")
                }
                
            }
        } 
        stage('run-parallel-branches') {

            agent {
                label "docker"
            }
            steps {
                
                parallel(
                    a: {
                        echo "Parallel Branch A"
                    },

                    b: {
                        echo "Parllel Branch B and B"
                    }
                )
            }
        }
    }
}